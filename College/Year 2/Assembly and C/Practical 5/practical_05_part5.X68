    ORG $1000

; D0 Used for Trap Codes, An Counting ENEMIES
; D1 Used for Players Health
; D2 Used for Enemy Positions AND POWER UP POSITIONS
; D3 USED FOR PLAYER POSITIONS
; D4 used for ENEMY count
; D5 USED ENEMY ARRAY COUNTER
; D6 USED FOR PO COUNT
; D7 USED PO ARRAY COUNTER
; A0 for counting enemies
; A1 for progress messages
; A2 used for PLAYER_X
; A3 used for ENEMY_POSITION
; A4 USED FOR POWER UPS 

DAMAGE EQU 10 ; Damage when Collisions occur
HEAL EQU 50 ; HEAL WHEN POWER UP COLLISION OCCURS

START:
    LEA PLAYER_X, A2 ; PLAYER WILL MOVE ALONG X AXIS
    LEA ENEMY_POSITIONS, A3 ;ENEMY POSITION OR SPAWN POINTS
    LEA POWER_UPS, A4 ;POWER UP SPAWN POINTS
    BRA GAME_LOOP

GAME_LOOP:
    BSR COUNT_ENEMIES ;SIZE OF THE ENEMY POSITIONS ARRAY
    MOVE.B D0,D4 ;RESET ENEMY COUNT AT BEGINNING OF LOOP
    
    BSR COUNT_POWER_UPS
    MOVE.B D0,D6 
    
    LEA MSG_GAMELOOP, A1 ;LOAD AND DRAW GAMELOOP MESSAGE
    BSR DRAW
    
    BSR UPDATE ;CALL UPDATE
    BRA GAME_LOOP

UPDATE:
    MOVE.B PLAYER_HEALTH, D1 ;MOVE PLAYER HEALTH INTO D1

    LEA MSG_HEALTH, A1 ;LOAD AND DRAW HEALTH MESSAGE
    BSR DRAW

    MOVE.B #3, D0 ;DISPLY SIGNED NUMBER IN D1.L IN DECIMAL IN SMALLEST FIELD
    TRAP #15

    LEA CRLF, A1 ;LOAD AND CARRAIGE RETURN AND LINE FEED
    BSR DRAW
    
    CMP #0, D1 ;CHECK IF HEALTH IS 0
    BLE GAME_OVER ;GAME OVER
    ADD.L #1, PLAYER_X ;CHANGE X POSITION OF PLAYER
    BSR POWER_UP_COLLISION ;Check for power up 
    BSR COLLISION ; CHECK FOR COLLISIONS WITH ENEMIES
    
    RTS
    
DRAW:
    MOVE.B #13, D0
    TRAP #15
    RTS
    
COLLISION:
    MOVE.B #1, D5 ;LOOP THROUGH ARRAY
    LEA ENEMY_POSITIONS, A3 ;LOAD ENEMY_POSITIONS ARRAY
    
ITERATE:
    CMP D5, D4 ;COUNTER FOR ENEMY_POSITIONS
    ADD.B #1, D5 ;SUBTRACT ONE
    BEQ GAME_LOOP ; IF 0 GO TO GAME_LOOP
    BNE CHECK_ENEMIES ;IF NOT CHECK FOR ENEMY COLLISIONS
    RTS

CHECK_ENEMIES:
    MOVE.L (A3)+,D2 ;MOVE ENEMIES POSITION TO D2
    MOVE.L (A2),D3 ;MOVE PLAYER POSITION TO D3
    
    CMP.L D2, D3 ;COMPARE PLAYER AND ENEMY POSITION
    BEQ REDUCE_HEALTH ;IF EQUAL REDUCE HEALTH
    BNE ITERATE ;ITERATE TO NEXT ENEMY
    
REDUCE_HEALTH:
    LEA MSG_COLLISION, A1 ;LOAD AND DRAW COLLISION MESSAGE
    BSR DRAW
    
    SUB.B #DAMAGE, PLAYER_HEALTH
    
    LEA MSG_DAMAGE, A1 ;LOAD AND DRAW MESSAGE
    BSR DRAW
    
    BRA GAME_LOOP
    
GAME_OVER:
    LEA MSG_GAMEOVER, A1
    BSR DRAW
    
    SIMHALT
    
COUNT_ENEMIES:
    MOVE.B #0, D0 ;INITIALIZE COUNTER TO 0
    LEA ENEMY_POSITIONS, A0 ;LOAD THE ADDRESS OF THE ARRAY INTO A0
    
COUNT_ENEMIES_LOOP:
    TST.L (A0)+ ;TEST THE BYTE AT THE ADDRESS IN A0 (CHECK IF 0) AND INCREMENT A0
    BEQ END_COUNTING ;IF THE BYTE IS ZERO, ITS THE END OF THE ARRAY
    
    ADD.B #1, D0 ;INCREMENT THE COUNTER
    BRA COUNT_ENEMIES_LOOP ;REPEAT THE LOOP
    
END_COUNTING:
    RTS
    
POWER_UP_COLLISION:
    MOVE.B #1, D6
    LEA POWER_UPS, A4

ITERATE_POWER_UPS:
    CMP D7, D6 ;COUNTER FOR ENEMY_POSITIONS
    ADD.B #1, D7 ;SUBTRACT ONE
    BEQ GAME_LOOP ; IF 0 GO TO GAME_LOOP
    BNE CHECK_POWER_UPS ;IF NOT CHECK FOR ENEMY COLLISIONS
    RTS

COUNT_POWER_UPS:
    MOVE.B #0, D0 ;INITIALIZE COUNTER TO 0
    LEA POWER_UPS, A4 ;LOAD THE ADDRESS OF THE ARRAY INTO A4
    
COUNT_POWER_UPS_LOOP:
    TST.L (A4)+ ;TEST THE BYTE AT THE ADDRESS IN A4 (CHECK IF 0) AND INCREMENT A0
    BEQ END_COUNTING ;IF THE BYTE IS ZERO, ITS THE END OF THE ARRAY
    
    ADD.B #1, D0 ;INCREMENT THE COUNTER
    BRA COUNT_POWER_UPS_LOOP ;REPEAT THE LOOP

CHECK_POWER_UPS:
    MOVE.L (A4)+,D2 ;MOVE POWER UP POSITION TO D2
    MOVE.L (A2),D3 ;MOVE PLAYER POSITION TO D3
    
    CMP.L D2, D3 ;COMPARE PLAYER AND POWER UP POSITION
    BEQ INCREASE_HEALTH ;IF EQUAL INCREASE HEALTH
    BNE ITERATE_POWER_UPS ;ITERATE TO NEXT POWER UP

INCREASE_HEALTH:
    LEA MSG_COLLISION, A1 ;LOAD AND DRAW COLLISION MESSAGE
    BSR DRAW
    
    ADD.B #HEAL, PLAYER_HEALTH
    
    LEA MSG_HEAL, A1 ;LOAD AND DRAW MESSAGE
    BSR DRAW
    
    BRA GAME_LOOP

PLAYER_X DC.L 1
PLAYER_HEALTH DC.B 100
MSG_HEALTH DC.B 'Health: ',0
MSG_GAMELOOP DC.B 'Game Loop',0
MSG_COLLISION DC.B 'Collision',0
MSG_GAMEOVER DC.B 'Game Over',0
MSG_DAMAGE DC.B 'Taking Damage',0
MSG_HEAL DC.B 'Healing',0
CRLF DC.B $0D,$0A,0
ENEMY_POSITIONS DC.L 20,30,40,50,60,70,80,90,200,300,500,0 ; TERMINATE ARRAY WITH A 0
POWER_UPS DC.L 10, 55, 220, 0 ; Terminate Array with a 0

    END     START   

*~Font name~Courier New~
*~Font size~10~
*~Tab type~1~
*~Tab size~4~
